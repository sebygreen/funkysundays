name: Deployment Workflow
on:
    push:
        branches:
            - release
    workflow_dispatch:

env:
    NEXT_PUBLIC_MAPBOX_TOKEN: ${{ secrets.NEXT_PUBLIC_MAPBOX_TOKEN }}
    POCKETBASE_URL: ${{ secrets.POCKETBASE_URL }}
    NODEMAILER_PASSWORD: ${{ secrets.NODEMAILER_PASSWORD }}
    NODEMAILER_USERNAME: ${{ secrets.NODEMAILER_USERNAME }}
    NODEMAILER_DESTINATION: ${{ secrets.NODEMAILER_DESTINATION }}

jobs:
    deploy:
        runs-on: ubuntu-latest
        steps:
            -   name: Checkout code
                uses: actions/checkout@v4

            -   name: Use Node.js
                uses: actions/setup-node@v4
                with:
                    node-version: '21.x'
                    cache: npm

            -   name: Restore cache
                uses: actions/cache@v4
                with:
                    path: .next/cache
                    # Generate a new cache whenever packages or source files change.
                    key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
                    # If source files changed but packages didn't, rebuild from a prior cache.
                    restore-keys: |
                        ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-

            -   name: Install dependencies
                run: npm ci

            -   name: Lint Next.js app
                run: npm run lint

            -   name: Build Next.js app
                run: |
                    touch .env
                    echo NEXT_PUBLIC_MAPBOX_TOKEN=$NEXT_PUBLIC_MAPBOX_TOKEN >> .env
                    echo POCKETBASE_URL=$POCKETBASE_URL >> .env
                    echo NODEMAILER_PASSWORD=$NODEMAILER_PASSWORD >> .env
                    echo NODEMAILER_USERNAME=$NODEMAILER_USERNAME >> .env
                    echo NODEMAILER_DESTINATION=$NODEMAILER_DESTINATION >> .env
                    npm run build
